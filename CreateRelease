#! /bin/bash
BASE_BINARIES=releases
BASE_BUILD=build.release
REL_TEMP=cppknife
BASE_TEMP=/tmp/$REL_TEMP
KNIFE_TAR=releases/cppknife.amd64.tgz
VERSION=$(grep "^##" CHANGELOG.md | grep -o '[0-9][0-9.]*' | head -n1)
BINARIES="dbknife fileknife geoknife netknife sesknife textknife libcppknife-$VERSION.so libcppknifegeo-$VERSION.so"
ABS_KNIFE_TAR=$(pwd)/$KNIFE_TAR
function ChangeVersion(){
  mkdir -p ../seapluspro.github.io/releases
  echo "$VERSION" >$BASE_BINARIES/version.txt
  echo "$VERSION" >../seapluspro.github.io/releases/version.txt
}
function SwitchControl(){
  cd unittest
  rm cppknife_control.hpp
  ln -s cppknife_control.$1.hpp cppknife_control.hpp
  cd ..
}
function PrepareBinaries(){
  mkdir -p $BASE_TEMP
  rm -Rf /tmp/$REL_TEMP/*
  for file in $BINARIES; do
    cp -a $BASE_BUILD/$file $BASE_TEMP
    strip --strip-all $BASE_TEMP/$file
  done
  pushd $BASE_TEMP >/dev/null 2>&1
  ls -ld *
  tar czf $ABS_KNIFE_TAR $BINARIES
  ls -ld $ABS_KNIFE_TAR
  popd >/dev/null 2>&1
}
function Doxy(){
  if [ -e doxygen/R ]; then
    cd doxygen
    echo "= creating documentation..."
    ./R -q
    cd ..
  fi
}
SwitchControl productive
mkdir -p $BASE_BUILD
cmake -Dmode=productive -DCMAKE_BUILD_TYPE=Release -S . -B $BASE_BUILD
cmake --build build.release
Doxy
ChangeVersion
PrepareBinaries
SwitchControl debug

